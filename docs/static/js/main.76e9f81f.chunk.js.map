{"version":3,"sources":["components/Pokemons.js","components/Pokemon.js","components/PokeList.js","App.js","index.js"],"names":["Pokemons","id","name","types","evolution","url","Pokemon","this","props","img","pokemonId","togglePokemonFav","isFav","className","onClick","data-id","src","alt","map","type","index","key","React","Component","PokemonsList","pokemons","pokemon","App","state","bind","event","parseInt","currentTarget","dataset","setState","prevState","pokemonIndex","findIndex","pokemonFav","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76e9f81f.chunk.js","sourcesContent":["const Pokemons = [\n        {\n          id: 1,\n          name: 'bulbasaur',\n          types: ['poison', 'grass'],\n          evolution: null,\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png',\n        },\n        {\n          id: 2,\n          name: 'ivysaur',\n          types: ['poison', 'grass'],\n          evolution: 'bulbasaur',\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png',\n        },\n        {\n          id: 3,\n          name: 'venusaur',\n          types: ['poison', 'grass'],\n          evolution: 'ivysaur',\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png',\n        },\n        {\n          id: 4,\n          name: 'charmander',\n          types: ['fire'],\n          evolution: null,\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/4.png',\n        },\n        {\n          id: 5,\n          name: 'charmeleon',\n          types: ['fire'],\n          evolution: 'charmander',\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/5.png',\n        },\n        {\n          id: 6,\n          name: 'charizard',\n          types: ['flying', 'fire'],\n          evolution: 'charmeleon',\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/6.png',\n        },\n        {\n          id: 7,\n          name: 'squirtle',\n          types: ['water'],\n          evolution: null,\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/7.png',\n        },\n        {\n          id: 8,\n          name: 'wartortle',\n          types: ['water'],\n          evolution: 'squirtle',\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/8.png',\n        },\n        {\n          id: 9,\n          name: 'blastoise',\n          types: ['water'],\n          evolution: 'wartortle',\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/9.png',\n        },\n        {\n          id: 10,\n          name: 'caterpie',\n          types: ['bug'],\n          evolution: null,\n          url:\n            'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png',\n        },\n      ];\n\nexport default Pokemons;","import React from 'react';\nimport './Pokemon.scss';\nimport PropTypes from 'prop-types';\n\n\nclass Pokemon extends React.Component {\n  render() {\n    const { img, name, types, pokemonId , togglePokemonFav, isFav } = this.props\n    return (\n        <div className={`pokemon__card ${isFav ? 'pokemon__card--fav' : ''} `} onClick={togglePokemonFav} data-id={pokemonId}>\n          <img className=\"pokemon__img\" src={img} alt={name}></img>\n          <div>\n            <p className=\"pokemon__name\">{name}</p>\n            <ul className=\"pokemon__types\">\n              {types.map((type, index) => {\n                return (\n                  <li className=\"pokemon__types__element\" key={index}>{type}</li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n    );\n  }\n};\n\nPokemon.propTypes = {\n  img: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  types: PropTypes.arrayOf(PropTypes.string).isRequired,\n  pokemonId: PropTypes.number.isRequired,\n  togglePokemonFav: PropTypes.func.isRequired,\n  isFav: PropTypes.bool\n}\n\nexport default Pokemon;\n\n","import React from 'react';\nimport './PokeList.scss';\nimport Pokemon from './Pokemon';\nimport PropTypes from 'prop-types';\n\nclass PokemonsList extends React.Component {\n  render() {\n    const { pokemons, togglePokemonFav } = this.props;\n    return (\n        <div className=\"pokemons__container\">\n          <ol className=\"pokemons__list\">\n            {pokemons.map(pokemon => \n                <li className=\"pokemons__list__element\" key={pokemon.id}>\n                  <Pokemon\n                    name={pokemon.name}\n                    img={pokemon.url}\n                    types={pokemon.types}\n                    pokemonId={pokemon.id}\n                    togglePokemonFav={togglePokemonFav}\n                    isFav={pokemon.isFav}\n                  />\n                </li>\n            )}\n          </ol>\n        </div>\n    );\n  }\n}\n\nPokemonsList.propTypes = {\n  pokemons: PropTypes.arrayOf(PropTypes.object).isRequired,\n  togglePokemonFav: PropTypes.func.isRequired,\n}\n\nexport default PokemonsList;","import React from 'react';\nimport './App.scss';\nimport Pokemons from './components/Pokemons';\nimport PokeList from './components/PokeList';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      pokemons: Pokemons, \n    }\n    this.togglePokemonFav=this.togglePokemonFav.bind(this);\n  }\n\n  togglePokemonFav(event) {\n    const pokemonId = parseInt(event.currentTarget.dataset.id);\n    this.setState((prevState) => {\n      const pokemonIndex = prevState.pokemons.findIndex(pokemon => pokemon.id === pokemonId);\n      const pokemonFav = prevState.pokemons[pokemonIndex];\n      const pokemons = prevState.pokemons\n      pokemons[pokemonIndex] = {...pokemonFav, isFav: !pokemonFav.isFav}\n      return {\n        pokemons: pokemons\n      }\n    })\n  }\n\n  render() {\n    const { pokemons } = this.state;\n    return (\n      <React.Fragment>\n        <header>\n          <h1 className=\"pokemons__main-title\">Mi lista de Pokemons</h1>\n        </header>\n        <main>\n          <PokeList pokemons={pokemons} togglePokemonFav={this.togglePokemonFav} />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}